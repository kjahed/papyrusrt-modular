/*
 * generated by Xtext 2.14.0
 */
grammar InternalPersist;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package ca.jahed.papyrusrt.persistence.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package ca.jahed.papyrusrt.persistence.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import ca.jahed.papyrusrt.persistence.dsl.services.PersistGrammarAccess;

}
@parser::members {
	private PersistGrammarAccess grammarAccess;

	public void setGrammarAccess(PersistGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRulePersist
entryRulePersist
:
{ before(grammarAccess.getPersistRule()); }
	 rulePersist
{ after(grammarAccess.getPersistRule()); } 
	 EOF 
;

// Rule Persist
rulePersist 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPersistAccess().getGroup()); }
		(rule__Persist__Group__0)
		{ after(grammarAccess.getPersistAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleStatement
entryRuleRuleStatement
:
{ before(grammarAccess.getRuleStatementRule()); }
	 ruleRuleStatement
{ after(grammarAccess.getRuleStatementRule()); } 
	 EOF 
;

// Rule RuleStatement
ruleRuleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleStatementAccess().getGroup()); }
		(rule__RuleStatement__Group__0)
		{ after(grammarAccess.getRuleStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForEachStatement
entryRuleForEachStatement
:
{ before(grammarAccess.getForEachStatementRule()); }
	 ruleForEachStatement
{ after(grammarAccess.getForEachStatementRule()); } 
	 EOF 
;

// Rule ForEachStatement
ruleForEachStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForEachStatementAccess().getGroup()); }
		(rule__ForEachStatement__Group__0)
		{ after(grammarAccess.getForEachStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateStatement
entryRuleCreateStatement
:
{ before(grammarAccess.getCreateStatementRule()); }
	 ruleCreateStatement
{ after(grammarAccess.getCreateStatementRule()); } 
	 EOF 
;

// Rule CreateStatement
ruleCreateStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateStatementAccess().getAlternatives()); }
		(rule__CreateStatement__Alternatives)
		{ after(grammarAccess.getCreateStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateFolderStatement
entryRuleCreateFolderStatement
:
{ before(grammarAccess.getCreateFolderStatementRule()); }
	 ruleCreateFolderStatement
{ after(grammarAccess.getCreateFolderStatementRule()); } 
	 EOF 
;

// Rule CreateFolderStatement
ruleCreateFolderStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateFolderStatementAccess().getGroup()); }
		(rule__CreateFolderStatement__Group__0)
		{ after(grammarAccess.getCreateFolderStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateFileStatement
entryRuleCreateFileStatement
:
{ before(grammarAccess.getCreateFileStatementRule()); }
	 ruleCreateFileStatement
{ after(grammarAccess.getCreateFileStatementRule()); } 
	 EOF 
;

// Rule CreateFileStatement
ruleCreateFileStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateFileStatementAccess().getGroup()); }
		(rule__CreateFileStatement__Group__0)
		{ after(grammarAccess.getCreateFileStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFileName
entryRuleFileName
:
{ before(grammarAccess.getFileNameRule()); }
	 ruleFileName
{ after(grammarAccess.getFileNameRule()); } 
	 EOF 
;

// Rule FileName
ruleFileName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFileNameAccess().getGroup()); }
		(rule__FileName__Group__0)
		{ after(grammarAccess.getFileNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIncludeStatement
entryRuleIncludeStatement
:
{ before(grammarAccess.getIncludeStatementRule()); }
	 ruleIncludeStatement
{ after(grammarAccess.getIncludeStatementRule()); } 
	 EOF 
;

// Rule IncludeStatement
ruleIncludeStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIncludeStatementAccess().getGroup()); }
		(rule__IncludeStatement__Group__0)
		{ after(grammarAccess.getIncludeStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWithStatement
entryRuleWithStatement
:
{ before(grammarAccess.getWithStatementRule()); }
	 ruleWithStatement
{ after(grammarAccess.getWithStatementRule()); } 
	 EOF 
;

// Rule WithStatement
ruleWithStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWithStatementAccess().getGroup()); }
		(rule__WithStatement__Group__0)
		{ after(grammarAccess.getWithStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCallStatement
entryRuleCallStatement
:
{ before(grammarAccess.getCallStatementRule()); }
	 ruleCallStatement
{ after(grammarAccess.getCallStatementRule()); } 
	 EOF 
;

// Rule CallStatement
ruleCallStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallStatementAccess().getGroup()); }
		(rule__CallStatement__Group__0)
		{ after(grammarAccess.getCallStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEClassName
entryRuleEClassName
:
{ before(grammarAccess.getEClassNameRule()); }
	 ruleEClassName
{ after(grammarAccess.getEClassNameRule()); } 
	 EOF 
;

// Rule EClassName
ruleEClassName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEClassNameAccess().getGroup()); }
		(rule__EClassName__Group__0)
		{ after(grammarAccess.getEClassNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEAttributeName
entryRuleEAttributeName
:
{ before(grammarAccess.getEAttributeNameRule()); }
	 ruleEAttributeName
{ after(grammarAccess.getEAttributeNameRule()); } 
	 EOF 
;

// Rule EAttributeName
ruleEAttributeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEAttributeNameAccess().getGroup()); }
		(rule__EAttributeName__Group__0)
		{ after(grammarAccess.getEAttributeNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEReferenceName
entryRuleEReferenceName
:
{ before(grammarAccess.getEReferenceNameRule()); }
	 ruleEReferenceName
{ after(grammarAccess.getEReferenceNameRule()); } 
	 EOF 
;

// Rule EReferenceName
ruleEReferenceName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEReferenceNameAccess().getGroup()); }
		(rule__EReferenceName__Group__0)
		{ after(grammarAccess.getEReferenceNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForEachStatementAccess().getContentsAssignment_3_0()); }
		(rule__ForEachStatement__ContentsAssignment_3_0)
		{ after(grammarAccess.getForEachStatementAccess().getContentsAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getForEachStatementAccess().getCallsAssignment_3_1()); }
		(rule__ForEachStatement__CallsAssignment_3_1)
		{ after(grammarAccess.getForEachStatementAccess().getCallsAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStatement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateStatementAccess().getCreateFileStatementParserRuleCall_0()); }
		ruleCreateFileStatement
		{ after(grammarAccess.getCreateStatementAccess().getCreateFileStatementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCreateStatementAccess().getCreateFolderStatementParserRuleCall_1()); }
		ruleCreateFolderStatement
		{ after(grammarAccess.getCreateStatementAccess().getCreateFolderStatementParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFolderStatement__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateFolderStatementAccess().getContentsAssignment_4_0()); }
		(rule__CreateFolderStatement__ContentsAssignment_4_0)
		{ after(grammarAccess.getCreateFolderStatementAccess().getContentsAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getCreateFolderStatementAccess().getCallsAssignment_4_1()); }
		(rule__CreateFolderStatement__CallsAssignment_4_1)
		{ after(grammarAccess.getCreateFolderStatementAccess().getCallsAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFileStatement__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateFileStatementAccess().getIncludedReferencingAssignment_3_0()); }
		(rule__CreateFileStatement__IncludedReferencingAssignment_3_0)
		{ after(grammarAccess.getCreateFileStatementAccess().getIncludedReferencingAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getCreateFileStatementAccess().getIncludedAttributesAssignment_3_1()); }
		(rule__CreateFileStatement__IncludedAttributesAssignment_3_1)
		{ after(grammarAccess.getCreateFileStatementAccess().getIncludedAttributesAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileName__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFileNameAccess().getPrefixAssignment_0_0()); }
		(rule__FileName__PrefixAssignment_0_0)
		{ after(grammarAccess.getFileNameAccess().getPrefixAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFileNameAccess().getAttrAssignment_0_1()); }
		(rule__FileName__AttrAssignment_0_1)
		{ after(grammarAccess.getFileNameAccess().getAttrAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Persist__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Persist__Group__0__Impl
	rule__Persist__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Persist__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPersistAccess().getModelKeyword_0()); }
	'model'
	{ after(grammarAccess.getPersistAccess().getModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Persist__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Persist__Group__1__Impl
	rule__Persist__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Persist__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPersistAccess().getModelAssignment_1()); }
	(rule__Persist__ModelAssignment_1)
	{ after(grammarAccess.getPersistAccess().getModelAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Persist__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Persist__Group__2__Impl
	rule__Persist__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Persist__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPersistAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPersistAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Persist__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Persist__Group__3__Impl
	rule__Persist__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Persist__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPersistAccess().getStatementsAssignment_3()); }
	(rule__Persist__StatementsAssignment_3)*
	{ after(grammarAccess.getPersistAccess().getStatementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Persist__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Persist__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Persist__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPersistAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getPersistAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStatement__Group__0__Impl
	rule__RuleStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStatementAccess().getRuleKeyword_0()); }
	'rule'
	{ after(grammarAccess.getRuleStatementAccess().getRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStatement__Group__1__Impl
	rule__RuleStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStatementAccess().getIdAssignment_1()); }
	(rule__RuleStatement__IdAssignment_1)
	{ after(grammarAccess.getRuleStatementAccess().getIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStatement__Group__2__Impl
	rule__RuleStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStatementAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRuleStatementAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStatement__Group__3__Impl
	rule__RuleStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStatementAccess().getRulesAssignment_3()); }
	(rule__RuleStatement__RulesAssignment_3)*
	{ after(grammarAccess.getRuleStatementAccess().getRulesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStatementAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getRuleStatementAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForEachStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEachStatement__Group__0__Impl
	rule__ForEachStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachStatementAccess().getForeachKeyword_0()); }
	'foreach'
	{ after(grammarAccess.getForEachStatementAccess().getForeachKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEachStatement__Group__1__Impl
	rule__ForEachStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachStatementAccess().getClassAssignment_1()); }
	(rule__ForEachStatement__ClassAssignment_1)
	{ after(grammarAccess.getForEachStatementAccess().getClassAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEachStatement__Group__2__Impl
	rule__ForEachStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachStatementAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getForEachStatementAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEachStatement__Group__3__Impl
	rule__ForEachStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachStatementAccess().getAlternatives_3()); }
	(rule__ForEachStatement__Alternatives_3)*
	{ after(grammarAccess.getForEachStatementAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEachStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachStatementAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getForEachStatementAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateFolderStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateFolderStatement__Group__0__Impl
	rule__CreateFolderStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFolderStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateFolderStatementAccess().getCreateKeyword_0()); }
	'create'
	{ after(grammarAccess.getCreateFolderStatementAccess().getCreateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFolderStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateFolderStatement__Group__1__Impl
	rule__CreateFolderStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFolderStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateFolderStatementAccess().getFolderKeyword_1()); }
	'folder'
	{ after(grammarAccess.getCreateFolderStatementAccess().getFolderKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFolderStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateFolderStatement__Group__2__Impl
	rule__CreateFolderStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFolderStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateFolderStatementAccess().getNameAssignment_2()); }
	(rule__CreateFolderStatement__NameAssignment_2)
	{ after(grammarAccess.getCreateFolderStatementAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFolderStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateFolderStatement__Group__3__Impl
	rule__CreateFolderStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFolderStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateFolderStatementAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getCreateFolderStatementAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFolderStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateFolderStatement__Group__4__Impl
	rule__CreateFolderStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFolderStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateFolderStatementAccess().getAlternatives_4()); }
	(rule__CreateFolderStatement__Alternatives_4)*
	{ after(grammarAccess.getCreateFolderStatementAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFolderStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateFolderStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFolderStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateFolderStatementAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getCreateFolderStatementAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateFileStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateFileStatement__Group__0__Impl
	rule__CreateFileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFileStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateFileStatementAccess().getSaveKeyword_0()); }
	'save'
	{ after(grammarAccess.getCreateFileStatementAccess().getSaveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFileStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateFileStatement__Group__1__Impl
	rule__CreateFileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFileStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateFileStatementAccess().getInKeyword_1()); }
	'in'
	{ after(grammarAccess.getCreateFileStatementAccess().getInKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFileStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateFileStatement__Group__2__Impl
	rule__CreateFileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFileStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateFileStatementAccess().getNameAssignment_2()); }
	(rule__CreateFileStatement__NameAssignment_2)
	{ after(grammarAccess.getCreateFileStatementAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFileStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateFileStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFileStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateFileStatementAccess().getAlternatives_3()); }
	(rule__CreateFileStatement__Alternatives_3)?
	{ after(grammarAccess.getCreateFileStatementAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FileName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileName__Group__0__Impl
	rule__FileName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileNameAccess().getAlternatives_0()); }
	(rule__FileName__Alternatives_0)
	{ after(grammarAccess.getFileNameAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileNameAccess().getGroup_1()); }
	(rule__FileName__Group_1__0)?
	{ after(grammarAccess.getFileNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FileName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileName__Group_1__0__Impl
	rule__FileName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileNameAccess().getPlusSignKeyword_1_0()); }
	'+'
	{ after(grammarAccess.getFileNameAccess().getPlusSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FileName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileNameAccess().getRightAssignment_1_1()); }
	(rule__FileName__RightAssignment_1_1)
	{ after(grammarAccess.getFileNameAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IncludeStatement__Group__0__Impl
	rule__IncludeStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeStatementAccess().getIncludeKeyword_0()); }
	'include'
	{ after(grammarAccess.getIncludeStatementAccess().getIncludeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IncludeStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeStatementAccess().getGroup_1()); }
	(rule__IncludeStatement__Group_1__0)
	{ after(grammarAccess.getIncludeStatementAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeStatement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IncludeStatement__Group_1__0__Impl
	rule__IncludeStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStatement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeStatementAccess().getIncludedAssignment_1_0()); }
	(rule__IncludeStatement__IncludedAssignment_1_0)
	{ after(grammarAccess.getIncludeStatementAccess().getIncludedAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStatement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IncludeStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStatement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeStatementAccess().getGroup_1_1()); }
	(rule__IncludeStatement__Group_1_1__0)*
	{ after(grammarAccess.getIncludeStatementAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeStatement__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IncludeStatement__Group_1_1__0__Impl
	rule__IncludeStatement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStatement__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeStatementAccess().getCommaKeyword_1_1_0()); }
	','
	{ after(grammarAccess.getIncludeStatementAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStatement__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IncludeStatement__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStatement__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeStatementAccess().getIncludedAssignment_1_1_1()); }
	(rule__IncludeStatement__IncludedAssignment_1_1_1)
	{ after(grammarAccess.getIncludeStatementAccess().getIncludedAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WithStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithStatement__Group__0__Impl
	rule__WithStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithStatementAccess().getWithKeyword_0()); }
	'with'
	{ after(grammarAccess.getWithStatementAccess().getWithKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithStatement__Group__1__Impl
	rule__WithStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WithStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithStatementAccess().getReferencingKeyword_1()); }
	'referencing'
	{ after(grammarAccess.getWithStatementAccess().getReferencingKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithStatementAccess().getGroup_2()); }
	(rule__WithStatement__Group_2__0)
	{ after(grammarAccess.getWithStatementAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WithStatement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithStatement__Group_2__0__Impl
	rule__WithStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithStatement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithStatementAccess().getIncludedAssignment_2_0()); }
	(rule__WithStatement__IncludedAssignment_2_0)
	{ after(grammarAccess.getWithStatementAccess().getIncludedAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithStatement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithStatement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithStatement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithStatementAccess().getGroup_2_1()); }
	(rule__WithStatement__Group_2_1__0)*
	{ after(grammarAccess.getWithStatementAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WithStatement__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithStatement__Group_2_1__0__Impl
	rule__WithStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithStatement__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithStatementAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getWithStatementAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithStatement__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithStatement__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithStatement__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithStatementAccess().getIncludedAssignment_2_1_1()); }
	(rule__WithStatement__IncludedAssignment_2_1_1)
	{ after(grammarAccess.getWithStatementAccess().getIncludedAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group__0__Impl
	rule__CallStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallStatementAccess().getCallKeyword_0()); }
	'call'
	{ after(grammarAccess.getCallStatementAccess().getCallKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallStatementAccess().getGroup_1()); }
	(rule__CallStatement__Group_1__0)
	{ after(grammarAccess.getCallStatementAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallStatement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group_1__0__Impl
	rule__CallStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallStatementAccess().getRulesAssignment_1_0()); }
	(rule__CallStatement__RulesAssignment_1_0)
	{ after(grammarAccess.getCallStatementAccess().getRulesAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallStatementAccess().getGroup_1_1()); }
	(rule__CallStatement__Group_1_1__0)*
	{ after(grammarAccess.getCallStatementAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallStatement__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group_1_1__0__Impl
	rule__CallStatement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallStatementAccess().getCommaKeyword_1_1_0()); }
	','
	{ after(grammarAccess.getCallStatementAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallStatement__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallStatementAccess().getRulesAssignment_1_1_1()); }
	(rule__CallStatement__RulesAssignment_1_1_1)
	{ after(grammarAccess.getCallStatementAccess().getRulesAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EClassName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EClassName__Group__0__Impl
	rule__EClassName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EClassName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEClassNameAccess().getBaseAssignment_0()); }
	(rule__EClassName__BaseAssignment_0)
	{ after(grammarAccess.getEClassNameAccess().getBaseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EClassName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EClassName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EClassName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEClassNameAccess().getGroup_1()); }
	(rule__EClassName__Group_1__0)*
	{ after(grammarAccess.getEClassNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EClassName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EClassName__Group_1__0__Impl
	rule__EClassName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EClassName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEClassNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getEClassNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EClassName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EClassName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EClassName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEClassNameAccess().getFieldsAssignment_1_1()); }
	(rule__EClassName__FieldsAssignment_1_1)
	{ after(grammarAccess.getEClassNameAccess().getFieldsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EAttributeName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAttributeName__Group__0__Impl
	rule__EAttributeName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAttributeName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAttributeNameAccess().getBaseAssignment_0()); }
	(rule__EAttributeName__BaseAssignment_0)
	{ after(grammarAccess.getEAttributeNameAccess().getBaseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAttributeName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAttributeName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAttributeName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAttributeNameAccess().getGroup_1()); }
	(rule__EAttributeName__Group_1__0)*
	{ after(grammarAccess.getEAttributeNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EAttributeName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAttributeName__Group_1__0__Impl
	rule__EAttributeName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAttributeName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAttributeNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getEAttributeNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAttributeName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAttributeName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAttributeName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAttributeNameAccess().getFieldsAssignment_1_1()); }
	(rule__EAttributeName__FieldsAssignment_1_1)
	{ after(grammarAccess.getEAttributeNameAccess().getFieldsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EReferenceName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EReferenceName__Group__0__Impl
	rule__EReferenceName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EReferenceName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEReferenceNameAccess().getBaseAssignment_0()); }
	(rule__EReferenceName__BaseAssignment_0)
	{ after(grammarAccess.getEReferenceNameAccess().getBaseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EReferenceName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EReferenceName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EReferenceName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEReferenceNameAccess().getGroup_1()); }
	(rule__EReferenceName__Group_1__0)*
	{ after(grammarAccess.getEReferenceNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EReferenceName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EReferenceName__Group_1__0__Impl
	rule__EReferenceName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EReferenceName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEReferenceNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getEReferenceNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EReferenceName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EReferenceName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EReferenceName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEReferenceNameAccess().getFieldsAssignment_1_1()); }
	(rule__EReferenceName__FieldsAssignment_1_1)
	{ after(grammarAccess.getEReferenceNameAccess().getFieldsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Persist__ModelAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPersistAccess().getModelSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPersistAccess().getModelSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Persist__StatementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPersistAccess().getStatementsRuleStatementParserRuleCall_3_0()); }
		ruleRuleStatement
		{ after(grammarAccess.getPersistAccess().getStatementsRuleStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStatement__IdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleStatementAccess().getIdIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRuleStatementAccess().getIdIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStatement__RulesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleStatementAccess().getRulesForEachStatementParserRuleCall_3_0()); }
		ruleForEachStatement
		{ after(grammarAccess.getRuleStatementAccess().getRulesForEachStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__ClassAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForEachStatementAccess().getClassEClassNameParserRuleCall_1_0()); }
		ruleEClassName
		{ after(grammarAccess.getForEachStatementAccess().getClassEClassNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__ContentsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForEachStatementAccess().getContentsCreateStatementParserRuleCall_3_0_0()); }
		ruleCreateStatement
		{ after(grammarAccess.getForEachStatementAccess().getContentsCreateStatementParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachStatement__CallsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForEachStatementAccess().getCallsCallStatementParserRuleCall_3_1_0()); }
		ruleCallStatement
		{ after(grammarAccess.getForEachStatementAccess().getCallsCallStatementParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFolderStatement__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateFolderStatementAccess().getNameFileNameParserRuleCall_2_0()); }
		ruleFileName
		{ after(grammarAccess.getCreateFolderStatementAccess().getNameFileNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFolderStatement__ContentsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateFolderStatementAccess().getContentsCreateStatementParserRuleCall_4_0_0()); }
		ruleCreateStatement
		{ after(grammarAccess.getCreateFolderStatementAccess().getContentsCreateStatementParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFolderStatement__CallsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateFolderStatementAccess().getCallsCallStatementParserRuleCall_4_1_0()); }
		ruleCallStatement
		{ after(grammarAccess.getCreateFolderStatementAccess().getCallsCallStatementParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFileStatement__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateFileStatementAccess().getNameFileNameParserRuleCall_2_0()); }
		ruleFileName
		{ after(grammarAccess.getCreateFileStatementAccess().getNameFileNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFileStatement__IncludedReferencingAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateFileStatementAccess().getIncludedReferencingWithStatementParserRuleCall_3_0_0()); }
		ruleWithStatement
		{ after(grammarAccess.getCreateFileStatementAccess().getIncludedReferencingWithStatementParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateFileStatement__IncludedAttributesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateFileStatementAccess().getIncludedAttributesIncludeStatementParserRuleCall_3_1_0()); }
		ruleIncludeStatement
		{ after(grammarAccess.getCreateFileStatementAccess().getIncludedAttributesIncludeStatementParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileName__PrefixAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFileNameAccess().getPrefixSTRINGTerminalRuleCall_0_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getFileNameAccess().getPrefixSTRINGTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileName__AttrAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFileNameAccess().getAttrEAttributeNameParserRuleCall_0_1_0()); }
		ruleEAttributeName
		{ after(grammarAccess.getFileNameAccess().getAttrEAttributeNameParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FileName__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFileNameAccess().getRightFileNameParserRuleCall_1_1_0()); }
		ruleFileName
		{ after(grammarAccess.getFileNameAccess().getRightFileNameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStatement__IncludedAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncludeStatementAccess().getIncludedEReferenceNameParserRuleCall_1_0_0()); }
		ruleEReferenceName
		{ after(grammarAccess.getIncludeStatementAccess().getIncludedEReferenceNameParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStatement__IncludedAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncludeStatementAccess().getIncludedEReferenceNameParserRuleCall_1_1_1_0()); }
		ruleEReferenceName
		{ after(grammarAccess.getIncludeStatementAccess().getIncludedEReferenceNameParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithStatement__IncludedAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWithStatementAccess().getIncludedEClassNameParserRuleCall_2_0_0()); }
		ruleEClassName
		{ after(grammarAccess.getWithStatementAccess().getIncludedEClassNameParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithStatement__IncludedAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWithStatementAccess().getIncludedEClassNameParserRuleCall_2_1_1_0()); }
		ruleEClassName
		{ after(grammarAccess.getWithStatementAccess().getIncludedEClassNameParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__RulesAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallStatementAccess().getRulesIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getCallStatementAccess().getRulesIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallStatement__RulesAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallStatementAccess().getRulesIDTerminalRuleCall_1_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCallStatementAccess().getRulesIDTerminalRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EClassName__BaseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEClassNameAccess().getBaseIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEClassNameAccess().getBaseIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EClassName__FieldsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEClassNameAccess().getFieldsIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEClassNameAccess().getFieldsIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAttributeName__BaseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAttributeNameAccess().getBaseIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEAttributeNameAccess().getBaseIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAttributeName__FieldsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAttributeNameAccess().getFieldsIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEAttributeNameAccess().getFieldsIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EReferenceName__BaseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEReferenceNameAccess().getBaseIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEReferenceNameAccess().getBaseIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EReferenceName__FieldsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEReferenceNameAccess().getFieldsIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEReferenceNameAccess().getFieldsIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
