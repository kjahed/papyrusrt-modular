/*
 * generated by Xtext 2.14.0
 */
grammar InternalPersist;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package ca.jahed.papyrusrt.persistence.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ca.jahed.papyrusrt.persistence.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ca.jahed.papyrusrt.persistence.dsl.services.PersistGrammarAccess;

}

@parser::members {

 	private PersistGrammarAccess grammarAccess;

    public InternalPersistParser(TokenStream input, PersistGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Persist";
   	}

   	@Override
   	protected PersistGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRulePersist
entryRulePersist returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPersistRule()); }
	iv_rulePersist=rulePersist
	{ $current=$iv_rulePersist.current; }
	EOF;

// Rule Persist
rulePersist returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='model'
		{
			newLeafNode(otherlv_0, grammarAccess.getPersistAccess().getModelKeyword_0());
		}
		(
			(
				lv_model_1_0=RULE_STRING
				{
					newLeafNode(lv_model_1_0, grammarAccess.getPersistAccess().getModelSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPersistRule());
					}
					setWithLastConsumed(
						$current,
						"model",
						lv_model_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPersistAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPersistAccess().getStatementsRuleStatementParserRuleCall_3_0());
				}
				lv_statements_3_0=ruleRuleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPersistRule());
					}
					add(
						$current,
						"statements",
						lv_statements_3_0,
						"ca.jahed.papyrusrt.persistence.dsl.Persist.RuleStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getPersistAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleRuleStatement
entryRuleRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleStatementRule()); }
	iv_ruleRuleStatement=ruleRuleStatement
	{ $current=$iv_ruleRuleStatement.current; }
	EOF;

// Rule RuleStatement
ruleRuleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='rule'
		{
			newLeafNode(otherlv_0, grammarAccess.getRuleStatementAccess().getRuleKeyword_0());
		}
		(
			(
				lv_id_1_0=RULE_ID
				{
					newLeafNode(lv_id_1_0, grammarAccess.getRuleStatementAccess().getIdIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRuleStatementRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRuleStatementAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleStatementAccess().getRulesForEachStatementParserRuleCall_3_0());
				}
				lv_rules_3_0=ruleForEachStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleStatementRule());
					}
					add(
						$current,
						"rules",
						lv_rules_3_0,
						"ca.jahed.papyrusrt.persistence.dsl.Persist.ForEachStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getRuleStatementAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleForEachStatement
entryRuleForEachStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForEachStatementRule()); }
	iv_ruleForEachStatement=ruleForEachStatement
	{ $current=$iv_ruleForEachStatement.current; }
	EOF;

// Rule ForEachStatement
ruleForEachStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='foreach'
		{
			newLeafNode(otherlv_0, grammarAccess.getForEachStatementAccess().getForeachKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForEachStatementAccess().getClassEClassNameParserRuleCall_1_0());
				}
				lv_class_1_0=ruleEClassName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForEachStatementRule());
					}
					set(
						$current,
						"class",
						lv_class_1_0,
						"ca.jahed.papyrusrt.persistence.dsl.Persist.EClassName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getForEachStatementAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getForEachStatementAccess().getContentsCreateStatementParserRuleCall_3_0_0());
					}
					lv_contents_3_0=ruleCreateStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForEachStatementRule());
						}
						add(
							$current,
							"contents",
							lv_contents_3_0,
							"ca.jahed.papyrusrt.persistence.dsl.Persist.CreateStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getForEachStatementAccess().getCallsCallStatementParserRuleCall_3_1_0());
					}
					lv_calls_4_0=ruleCallStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForEachStatementRule());
						}
						add(
							$current,
							"calls",
							lv_calls_4_0,
							"ca.jahed.papyrusrt.persistence.dsl.Persist.CallStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getForEachStatementAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleCreateStatement
entryRuleCreateStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateStatementRule()); }
	iv_ruleCreateStatement=ruleCreateStatement
	{ $current=$iv_ruleCreateStatement.current; }
	EOF;

// Rule CreateStatement
ruleCreateStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCreateStatementAccess().getCreateFileStatementParserRuleCall_0());
		}
		this_CreateFileStatement_0=ruleCreateFileStatement
		{
			$current = $this_CreateFileStatement_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCreateStatementAccess().getCreateFolderStatementParserRuleCall_1());
		}
		this_CreateFolderStatement_1=ruleCreateFolderStatement
		{
			$current = $this_CreateFolderStatement_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCreateFolderStatement
entryRuleCreateFolderStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateFolderStatementRule()); }
	iv_ruleCreateFolderStatement=ruleCreateFolderStatement
	{ $current=$iv_ruleCreateFolderStatement.current; }
	EOF;

// Rule CreateFolderStatement
ruleCreateFolderStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='create'
		{
			newLeafNode(otherlv_0, grammarAccess.getCreateFolderStatementAccess().getCreateKeyword_0());
		}
		otherlv_1='folder'
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateFolderStatementAccess().getFolderKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateFolderStatementAccess().getNameFileNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleFileName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateFolderStatementRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"ca.jahed.papyrusrt.persistence.dsl.Persist.FileName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getCreateFolderStatementAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCreateFolderStatementAccess().getContentsCreateStatementParserRuleCall_4_0_0());
					}
					lv_contents_4_0=ruleCreateStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCreateFolderStatementRule());
						}
						add(
							$current,
							"contents",
							lv_contents_4_0,
							"ca.jahed.papyrusrt.persistence.dsl.Persist.CreateStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getCreateFolderStatementAccess().getCallsCallStatementParserRuleCall_4_1_0());
					}
					lv_calls_5_0=ruleCallStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCreateFolderStatementRule());
						}
						add(
							$current,
							"calls",
							lv_calls_5_0,
							"ca.jahed.papyrusrt.persistence.dsl.Persist.CallStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getCreateFolderStatementAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleCreateFileStatement
entryRuleCreateFileStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateFileStatementRule()); }
	iv_ruleCreateFileStatement=ruleCreateFileStatement
	{ $current=$iv_ruleCreateFileStatement.current; }
	EOF;

// Rule CreateFileStatement
ruleCreateFileStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='save'
		{
			newLeafNode(otherlv_0, grammarAccess.getCreateFileStatementAccess().getSaveKeyword_0());
		}
		otherlv_1='in'
		{
			newLeafNode(otherlv_1, grammarAccess.getCreateFileStatementAccess().getInKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateFileStatementAccess().getNameFileNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleFileName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateFileStatementRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"ca.jahed.papyrusrt.persistence.dsl.Persist.FileName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCreateFileStatementAccess().getIncludedReferencingWithStatementParserRuleCall_3_0_0());
					}
					lv_includedReferencing_3_0=ruleWithStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCreateFileStatementRule());
						}
						set(
							$current,
							"includedReferencing",
							lv_includedReferencing_3_0,
							"ca.jahed.papyrusrt.persistence.dsl.Persist.WithStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getCreateFileStatementAccess().getIncludedAttributesIncludeStatementParserRuleCall_3_1_0());
					}
					lv_includedAttributes_4_0=ruleIncludeStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCreateFileStatementRule());
						}
						set(
							$current,
							"includedAttributes",
							lv_includedAttributes_4_0,
							"ca.jahed.papyrusrt.persistence.dsl.Persist.IncludeStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleFileName
entryRuleFileName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFileNameRule()); }
	iv_ruleFileName=ruleFileName
	{ $current=$iv_ruleFileName.current; }
	EOF;

// Rule FileName
ruleFileName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_prefix_0_0=RULE_STRING
					{
						newLeafNode(lv_prefix_0_0, grammarAccess.getFileNameAccess().getPrefixSTRINGTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFileNameRule());
						}
						setWithLastConsumed(
							$current,
							"prefix",
							lv_prefix_0_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getFileNameAccess().getAttrEAttributeNameParserRuleCall_0_1_0());
					}
					lv_attr_1_0=ruleEAttributeName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFileNameRule());
						}
						set(
							$current,
							"attr",
							lv_attr_1_0,
							"ca.jahed.papyrusrt.persistence.dsl.Persist.EAttributeName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_2='+'
			{
				newLeafNode(otherlv_2, grammarAccess.getFileNameAccess().getPlusSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFileNameAccess().getRightFileNameParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleFileName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFileNameRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"ca.jahed.papyrusrt.persistence.dsl.Persist.FileName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleIncludeStatement
entryRuleIncludeStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIncludeStatementRule()); }
	iv_ruleIncludeStatement=ruleIncludeStatement
	{ $current=$iv_ruleIncludeStatement.current; }
	EOF;

// Rule IncludeStatement
ruleIncludeStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='include'
		{
			newLeafNode(otherlv_0, grammarAccess.getIncludeStatementAccess().getIncludeKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getIncludeStatementAccess().getIncludedEReferenceNameParserRuleCall_1_0_0());
					}
					lv_included_1_0=ruleEReferenceName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIncludeStatementRule());
						}
						add(
							$current,
							"included",
							lv_included_1_0,
							"ca.jahed.papyrusrt.persistence.dsl.Persist.EReferenceName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getIncludeStatementAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getIncludeStatementAccess().getIncludedEReferenceNameParserRuleCall_1_1_1_0());
						}
						lv_included_3_0=ruleEReferenceName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIncludeStatementRule());
							}
							add(
								$current,
								"included",
								lv_included_3_0,
								"ca.jahed.papyrusrt.persistence.dsl.Persist.EReferenceName");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleWithStatement
entryRuleWithStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWithStatementRule()); }
	iv_ruleWithStatement=ruleWithStatement
	{ $current=$iv_ruleWithStatement.current; }
	EOF;

// Rule WithStatement
ruleWithStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='with'
		{
			newLeafNode(otherlv_0, grammarAccess.getWithStatementAccess().getWithKeyword_0());
		}
		otherlv_1='referencing'
		{
			newLeafNode(otherlv_1, grammarAccess.getWithStatementAccess().getReferencingKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getWithStatementAccess().getIncludedEClassNameParserRuleCall_2_0_0());
					}
					lv_included_2_0=ruleEClassName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWithStatementRule());
						}
						add(
							$current,
							"included",
							lv_included_2_0,
							"ca.jahed.papyrusrt.persistence.dsl.Persist.EClassName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getWithStatementAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getWithStatementAccess().getIncludedEClassNameParserRuleCall_2_1_1_0());
						}
						lv_included_4_0=ruleEClassName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getWithStatementRule());
							}
							add(
								$current,
								"included",
								lv_included_4_0,
								"ca.jahed.papyrusrt.persistence.dsl.Persist.EClassName");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleCallStatement
entryRuleCallStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallStatementRule()); }
	iv_ruleCallStatement=ruleCallStatement
	{ $current=$iv_ruleCallStatement.current; }
	EOF;

// Rule CallStatement
ruleCallStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='call'
		{
			newLeafNode(otherlv_0, grammarAccess.getCallStatementAccess().getCallKeyword_0());
		}
		(
			(
				(
					lv_rules_1_0=RULE_ID
					{
						newLeafNode(lv_rules_1_0, grammarAccess.getCallStatementAccess().getRulesIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCallStatementRule());
						}
						addWithLastConsumed(
							$current,
							"rules",
							lv_rules_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getCallStatementAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						lv_rules_3_0=RULE_ID
						{
							newLeafNode(lv_rules_3_0, grammarAccess.getCallStatementAccess().getRulesIDTerminalRuleCall_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCallStatementRule());
							}
							addWithLastConsumed(
								$current,
								"rules",
								lv_rules_3_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleEClassName
entryRuleEClassName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEClassNameRule()); }
	iv_ruleEClassName=ruleEClassName
	{ $current=$iv_ruleEClassName.current; }
	EOF;

// Rule EClassName
ruleEClassName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_base_0_0=RULE_ID
				{
					newLeafNode(lv_base_0_0, grammarAccess.getEClassNameAccess().getBaseIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEClassNameRule());
					}
					setWithLastConsumed(
						$current,
						"base",
						lv_base_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getEClassNameAccess().getFullStopKeyword_1_0());
			}
			(
				(
					lv_fields_2_0=RULE_ID
					{
						newLeafNode(lv_fields_2_0, grammarAccess.getEClassNameAccess().getFieldsIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEClassNameRule());
						}
						addWithLastConsumed(
							$current,
							"fields",
							lv_fields_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEAttributeName
entryRuleEAttributeName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEAttributeNameRule()); }
	iv_ruleEAttributeName=ruleEAttributeName
	{ $current=$iv_ruleEAttributeName.current; }
	EOF;

// Rule EAttributeName
ruleEAttributeName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_base_0_0=RULE_ID
				{
					newLeafNode(lv_base_0_0, grammarAccess.getEAttributeNameAccess().getBaseIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEAttributeNameRule());
					}
					setWithLastConsumed(
						$current,
						"base",
						lv_base_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getEAttributeNameAccess().getFullStopKeyword_1_0());
			}
			(
				(
					lv_fields_2_0=RULE_ID
					{
						newLeafNode(lv_fields_2_0, grammarAccess.getEAttributeNameAccess().getFieldsIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEAttributeNameRule());
						}
						addWithLastConsumed(
							$current,
							"fields",
							lv_fields_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEReferenceName
entryRuleEReferenceName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEReferenceNameRule()); }
	iv_ruleEReferenceName=ruleEReferenceName
	{ $current=$iv_ruleEReferenceName.current; }
	EOF;

// Rule EReferenceName
ruleEReferenceName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_base_0_0=RULE_ID
				{
					newLeafNode(lv_base_0_0, grammarAccess.getEReferenceNameAccess().getBaseIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEReferenceNameRule());
					}
					setWithLastConsumed(
						$current,
						"base",
						lv_base_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getEReferenceNameAccess().getFullStopKeyword_1_0());
			}
			(
				(
					lv_fields_2_0=RULE_ID
					{
						newLeafNode(lv_fields_2_0, grammarAccess.getEReferenceNameAccess().getFieldsIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEReferenceNameRule());
						}
						addWithLastConsumed(
							$current,
							"fields",
							lv_fields_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)*
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
